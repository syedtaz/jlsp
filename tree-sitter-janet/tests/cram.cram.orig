Can we read comments?

  $ tree-sitter parse $TESTDIR/comments.janet
  (main [0, 0] - [1, 26]
    (value [0, 0] - [0, 19]
      (raw_value [0, 0] - [0, 19]
        (comment [0, 0] - [0, 19])))
    (value [0, 19] - [1, 26]
      (ws [0, 19] - [1, 0])
      (raw_value [1, 0] - [1, 26]
        (comment [1, 0] - [1, 26]))))

Can we read keywords?

  $ tree-sitter parse $TESTDIR/keywords.janet
  (main [0, 0] - [2, 6]
    (value [0, 0] - [0, 6]
      (raw_value [0, 0] - [0, 6]
        (keyword [0, 0] - [0, 6]
          (symchars [0, 1] - [0, 2])
          (symchars [0, 2] - [0, 3])
          (symchars [0, 3] - [0, 4])
          (symchars [0, 4] - [0, 5])
          (symchars [0, 5] - [0, 6]))))
    (value [0, 6] - [1, 7]
      (ws [0, 6] - [1, 0])
      (raw_value [1, 0] - [1, 7]
        (keyword [1, 0] - [1, 7]
          (symchars [1, 1] - [1, 2])
          (symchars [1, 2] - [1, 3])
          (symchars [1, 3] - [1, 4])
          (symchars [1, 4] - [1, 5])
          (symchars [1, 5] - [1, 6])
          (symchars [1, 6] - [1, 7]))))
    (value [1, 7] - [2, 6]
      (ws [1, 7] - [2, 0])
      (raw_value [2, 0] - [2, 6]
        (keyword [2, 0] - [2, 6]
          (symchars [2, 1] - [2, 2])
          (symchars [2, 2] - [2, 3])
          (symchars [2, 3] - [2, 4])
          (symchars [2, 4] - [2, 5])
          (symchars [2, 5] - [2, 6])))))

Can we read symbols?

  $ tree-sitter parse $TESTDIR/symbols.janet
  (main [0, 0] - [2, 10]
    (value [0, 0] - [0, 5]
      (raw_value [0, 0] - [0, 5]
        (symbol [0, 0] - [0, 5]
          (symchars [0, 0] - [0, 1])
          (symchars [0, 1] - [0, 2])
          (symchars [0, 2] - [0, 3])
          (symchars [0, 3] - [0, 4])
          (symchars [0, 4] - [0, 5]))))
    (value [0, 5] - [0, 12]
      (ws [0, 5] - [0, 6])
      (raw_value [0, 6] - [0, 12]
        (symbol [0, 6] - [0, 12]
          (symchars [0, 6] - [0, 7])
          (symchars [0, 7] - [0, 8])
          (symchars [0, 8] - [0, 9])
          (symchars [0, 9] - [0, 10])
          (symchars [0, 10] - [0, 11])
          (symchars [0, 11] - [0, 12]))))
    (value [0, 12] - [0, 18]
      (ws [0, 12] - [0, 13])
      (raw_value [0, 13] - [0, 18]
        (symbol [0, 13] - [0, 18]
          (symchars [0, 13] - [0, 14])
          (symchars [0, 14] - [0, 15])
          (symchars [0, 15] - [0, 16])
          (symchars [0, 16] - [0, 17])
          (symchars [0, 17] - [0, 18]))))
    (value [0, 18] - [0, 25]
      (ws [0, 18] - [0, 19])
      (raw_value [0, 19] - [0, 25]
        (symbol [0, 19] - [0, 25]
          (symchars [0, 19] - [0, 20])
          (symchars [0, 20] - [0, 21])
          (symchars [0, 21] - [0, 22])
          (symchars [0, 22] - [0, 23])
          (symchars [0, 23] - [0, 24])
          (symchars [0, 24] - [0, 25]))))
    (value [0, 25] - [1, 1]
      (ws [0, 25] - [1, 0])
      (raw_value [1, 0] - [1, 1]
        (symbol [1, 0] - [1, 1]
          (symchars [1, 0] - [1, 1]))))
    (value [1, 1] - [1, 3]
      (ws [1, 1] - [1, 2])
      (raw_value [1, 2] - [1, 3]
        (symbol [1, 2] - [1, 3]
          (symchars [1, 2] - [1, 3]))))
    (value [1, 3] - [1, 5]
      (ws [1, 3] - [1, 4])
      (raw_value [1, 4] - [1, 5]
        (symbol [1, 4] - [1, 5]
          (symchars [1, 4] - [1, 5]))))
    (value [1, 5] - [1, 7]
      (ws [1, 5] - [1, 6])
      (raw_value [1, 6] - [1, 7]
        (symbol [1, 6] - [1, 7]
          (symchars [1, 6] - [1, 7]))))
    (value [1, 7] - [2, 5]
      (ws [1, 7] - [2, 0])
      (raw_value [2, 0] - [2, 5]
        (symbol [2, 0] - [2, 5]
          (symchars [2, 0] - [2, 1])
          (symchars [2, 1] - [2, 2])
          (symchars [2, 2] - [2, 3])
          (symchars [2, 3] - [2, 4])
          (symchars [2, 4] - [2, 5]))))
    (value [2, 5] - [2, 10]
      (ws [2, 5] - [2, 6])
      (raw_value [2, 6] - [2, 10]
        (symbol [2, 6] - [2, 10]
          (symchars [2, 6] - [2, 7])
          (symchars [2, 7] - [2, 8])
          (symchars [2, 8] - [2, 9])
          (symchars [2, 9] - [2, 10])))))

We should succeed.